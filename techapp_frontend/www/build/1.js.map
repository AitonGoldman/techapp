{"version":3,"sources":["../../src/pages/home/home.module.ts","../../src/models/problem.ts","../../src/pages/home/home.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { HomePage } from './home';\n\n@NgModule({\n  declarations: [\n    HomePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(HomePage),\n  ],\n})\nexport class HomePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","export class ProblemModelBuilder {\n    machine_id: number = null;\n    problem_type: string = null;\n    description: string = null;\n    resolved: boolean = false;\n    problem_id: number = null;\n    user_id: number = null;\n    \n    setMachineId(value: number): ProblemModelBuilder {\n        this.machine_id=value;\n        return this;\n    }\n    setProblemType(value: string): ProblemModelBuilder {\n        this.problem_type=value;\n        return this;\n    }\n\n    setDescription(value: string): ProblemModelBuilder {\n        this.description=value;\n        return this;\n    }\n    \n    setResolved(value: boolean): ProblemModelBuilder {\n        this.resolved=value;\n        return this;\n    }    \n    setUserId(value: number): ProblemModelBuilder {\n        this.user_id=value;\n        return this;\n    }\n    \n    buildFromJson(value: any){        \n        this.machine_id=value['first_name'] as number\n        this.problem_id=value['problem_id'] as number\n        this.problem_type=value['problem_type']\n        this.description=value['description']\n        this.resolved=value['resolved'] as boolean\n        this.user_id=value['user_id'] as number\n        return this;\n    }\n    \n    build(): ProblemModel {\n        return new ProblemModel(this);\n    }\n    \n}\n\nexport class ProblemModel {\n    machine_id: number = null;\n    problem_type: string = null;\n    description: string = null;\n    resolved: boolean = false;\n    problem_id: number = null;\n    user_id: number = null;\n    \n    constructor(problemModelBuilder: ProblemModelBuilder ){\n        this.machine_id=problemModelBuilder.machine_id\n        this.problem_id=problemModelBuilder.problem_id\n        this.problem_type=problemModelBuilder.problem_type\n        this.description=problemModelBuilder.description\n        this.resolved=problemModelBuilder.resolved\n        this.user_id=problemModelBuilder.user_id\n    }           \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/problem.ts","import { HttpResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController, FabContainer } from 'ionic-angular';\nimport { PssApiProvider } from '../../providers/pss-api/pss-api';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { MachinesProvider } from '../../providers/machines/machines';\nimport { ProblemTypeProvider } from '../../providers/problem-type/problem-type'\nimport { ProblemModel, ProblemModelBuilder } from '../../models/problem'\n/**\n * Generated class for the HomePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n})\nexport class HomePage {\n    //\n    // get list of machines\n    // launch dialog \n    // \n    // \n    eventId:number = 1;\n    loggedIn:boolean = false;\n    machines:any = [];\n    filteredMachines:any = [];\n    mode:string = \"tech\";\n    backupMachineEra: number = null;\n    currentMachine: any = null;\n    \n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public pssApi: PssApiProvider,\n                public alertCtrl: AlertController,\n                public auth: AuthProvider,\n                public problemTypes: ProblemTypeProvider,\n                public machinesInfo: MachinesProvider) {    \n    }\n    \n    ionViewWillEnter(){\n        this.machines = this.machinesInfo.getMachinesList();\n    }\n    \n    ionViewDidLoad() {\n        console.log('ionViewDidLoad HomePage');\n        this.loggedIn=this.auth.isLoggedIn();\n        if(this.navParams.get('mode')=='backup'){\n            this.mode='backup';\n        }\n        if(this.navParams.get('machineId')!=null){\n            this.pssApi.getMachine(this.navParams.get('machineId')).subscribe((result: HttpResponse<any>)=>{\n                if(result==null){\n                    return;\n                }            \n                this.currentMachine = result.body.data;\n            })\n            return;\n        }        \n    }\n    \n    getMachine(machine: any){\n        this.filteredMachines=[];\n        this.pssApi.getMachine(machine.machine_id).subscribe((result: HttpResponse<any>)=>{\n            if(result==null){\n                return;\n            }            \n            this.currentMachine = result.body.data;\n        })\n    }\n    \n    switchMode(mode: string, fab){\n        fab.close();\n        this.mode=mode;\n    }\n\n    logout(fab: FabContainer){\n        fab.close();\n        this.auth.logout();\n        this.loggedIn=false;\n    }\n    \n    login(fab: FabContainer){\n        fab.close();\n        console.log(this.auth.getUsersList());\n        this.openLoginDialog(this.auth.getUsersList());\n    }\n\n    machineLookup(ev: any){\n        this.currentMachine=null;\n        const val = Number(ev.target.value);        \n        if (val > 999 && val < 10000) {\n            this.filteredMachines = this.machines.filter((item) => {                \n                return item.machine_four_digit_id == val;\n            })\n        }\n    }\n\n    openProblemDialog() {        \n        let alert = this.alertCtrl.create();\n        alert.setTitle('Problem');\n        for(let problemType of this.problemTypes.getProblemTypes()){\n            alert.addInput({\n                type: 'radio',\n                label: problemType,\n                value: problemType,\n                checked: false\n            });            \n        }\n        alert.addButton('Cancel');\n        alert.addButton({\n            text: 'OK',\n            handler: data => {                \n                let problem: ProblemModel = new ProblemModelBuilder().setProblemType(data).setMachineId(this.currentMachine.machine_id).setUserId(this.auth.getUserId()).build()\n                this.pssApi.addProblem(problem).subscribe((result)=>{\n                    this.currentMachine.problems.unshift(problem);\n                })\n            }\n        });\n        alert.present();\n    }\n    \n    openLoginDialog(users) {\n        console.log(users);\n        let alert = this.alertCtrl.create();\n        alert.setTitle('Login');\n        for(let user of users){\n            alert.addInput({\n                type: 'radio',\n                label: user.username,\n                value: user,\n                checked: false\n            });            \n        }\n        \n        alert.addButton('Cancel');\n        alert.addButton({\n            text: 'OK',\n            handler: data => {\n                this.auth.login(data);\n                this.loggedIn=this.auth.isLoggedIn();\n                this.currentMachine=null;\n            }\n        });\n        alert.present();\n    }\n    openMachineLocationDialog() {        \n        let alert = this.alertCtrl.create();\n        alert.setTitle('Login');\n        for(let machineLocation of this.machinesInfo.getMachineLocations()){\n            alert.addInput({\n                type: 'radio',\n                label: machineLocation,\n                value: machineLocation,\n                checked: false\n            });            \n        }\n        \n        alert.addButton('Cancel');\n        alert.addButton({\n            text: 'OK',\n            handler: data => {                \n                this.currentMachine.machine_location=data;\n                this.pssApi.editMachine(this.currentMachine).subscribe((result: HttpResponse<any>)=>{\n                    if(result==null){\n                        return;\n                    }                                \n                })\n            }\n        });\n        alert.present();\n    }\n    selectbackupMachine(machine_era_type){\n        this.pssApi.selectBackupMachine({machine_era_type:machine_era_type}).subscribe((result: HttpResponse<any>)=>{\n            if(result==null){                \n                return;\n            }\n            this.openBackupMachineSuccessDialog(result.body.data.machine_name)\n        })        \n    }\n    openBackupMachineSuccessDialog(machineName) {        \n        let alert = this.alertCtrl.create({\n            title: 'Backup Machine',\n            subTitle: 'Backup machine '+machineName+' selected.'            \n        });\n        alert.addButton({text: 'OK'})\n        alert.present();\n    }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}