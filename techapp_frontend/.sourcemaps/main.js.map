{"version":3,"sources":["../../src/providers/auth/auth.ts","../../src/providers/machines/machines.ts","../../src/providers/problem-type/problem-type.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/http-loading/http-loading.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/models/user.ts","../../src/app/app.component.ts","../../src/providers/pss-api/pss-api.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { PssApiProvider } from '../pss-api/pss-api';\nimport { Injectable } from '@angular/core';\nimport { User } from '../../models/user'\nimport { CookieService } from 'ngx-cookie';\n\n@Injectable()\nexport class AuthProvider {\n    user: User = new User();\n    userList: any = {};\n    \n    constructor(public pssApi: PssApiProvider,\n                public _cookieService:CookieService) {\n        console.log('Hello AuthProvider Provider');\n    }\n\n    loadLoginInfoFromCookies(){\n        if(this._cookieService.getObject(\"loggedInUser\")!=null){\n            this.user = this._cookieService.getObject(\"loggedInUser\") as User;            \n            this.user.loggedIn=true;\n        }\n        \n    }\n\n    logout(){\n        this.user=new User();\n        this._cookieService.remove(\"loggedInUser\");\n    }\n    \n    login(userJson: any){\n        this.user.userName=userJson['username']\n        this.user.loggedIn=true;\n        this.user.userId=userJson['user_id']\n        this._cookieService.putObject(\"loggedInUser\",this.user);        \n    }\n    \n    isLoggedIn(){\n        return this.user.loggedIn;\n    }\n\n    getUserId(){\n        return this.user.userId;\n    }\n\n    saveUsersList(userList){\n        this.userList=userList;\n    }\n    \n    getUsersList(){        \n        return this.userList;        \n    }\n    getUsername(userId: number){                \n        let userList = {}\n        for(let user of this.userList){\n            userList[user['user_id']]=user\n        }\n\n        if(userList[userId]==null){\n            return \"\"\n        }\n        return userList[userId]['username'];\n    }\n    \n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth/auth.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/*\n  Generated class for the MachinesProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class MachinesProvider {\n    machines: any = [];\n    machineLocations: any = [];\n    constructor(public http: HttpClient) {\n        console.log('Hello MachinesProvider Provider');\n    }\n    \n    saveMachinesList(machinesList: any){\n        this.machines=machinesList;\n    }\n    \n    getMachinesList(){\n        return this.machines;\n    }\n\n    saveMachineLocations(machineLocations){\n        this.machineLocations=machineLocations;\n    }\n\n    getMachineLocations(){\n        return this.machineLocations;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/machines/machines.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/*\n  Generated class for the ProblemTypeProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class ProblemTypeProvider {\n    problemTypes:any = []\n    constructor(public http: HttpClient) {\n        console.log('Hello ProblemTypeProvider Provider');\n    }\n    setProblemTypes(problemTypes:any){\n        this.problemTypes = problemTypes;\n    }\n    getProblemTypes(){\n        return this.problemTypes;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/problem-type/problem-type.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 140;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 140\n// module chunks = 3","var map = {\n\t\"../pages/home/home.module\": [\n\t\t403,\n\t\t1\n\t],\n\t\"../pages/problem-edit/problem-edit.module\": [\n\t\t404,\n\t\t0\n\t],\n\t\"../pages/summary/summary.module\": [\n\t\t405,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 184;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 184\n// module chunks = 3","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoadingController, Loading} from 'ionic-angular';\n\n/*\n  Generated class for the HttpLoadingProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class HttpLoadingProvider {\n\n    queue: any = [];\n    dialogContent: any = {message:'',loading:''};\n    loadingDialogInstance: Loading = null; \n    constructor(public http: HttpClient,\n                public loadingCtrl: LoadingController) {\n        console.log('Hello HttpLoadingProvider Provider');\n    }        \n\n    getDialogContentString(){\n        return this.dialogContent.message+'<br>'+this.dialogContent.loading;\n    }\n    \n    updateLoadingDialogMessage(message,loading){\n        if(message!=null){\n            this.dialogContent['message']=message;\n        }\n        if(loading!=null){\n            if(loading == \"100% loaded...\"){\n                this.dialogContent['loading']=\"\";\n            } else {\n                this.dialogContent['loading']=loading;                \n            }\n            \n        }        \n        this.loadingDialogInstance.data.content=this.getDialogContentString();\n    }\n    \n    openLoadingDialog(message){\n        this.queue.push(message);        \n        if(this.loadingDialogInstance==null){\n            this.loadingDialogInstance = this.loadingCtrl.create({\n                content: \"\"\n            });\n            this.updateLoadingDialogMessage(message,null);\n            this.loadingDialogInstance.present();\n            \n        } else {            \n            this.updateLoadingDialogMessage(message,null);\n            //this.loadingDialogInstance.data.content=message+'<br> poop';\n        }\n    }\n    closeLoadingDialog(){\n        setTimeout(()=>{\n            this.queue.pop()\n            if(this.queue.length==0){\n                this.loadingDialogInstance.dismiss();\n                this.loadingDialogInstance=null;\n            }            \n        }, 500)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/http-loading/http-loading.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { CookieModule } from 'ngx-cookie';\n\nimport { MyApp } from './app.component';\nimport { PssApiProvider } from '../providers/pss-api/pss-api';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { AuthProvider } from '../providers/auth/auth';\nimport { ProblemTypeProvider } from '../providers/problem-type/problem-type';\nimport { HttpLoadingProvider } from '../providers/http-loading/http-loading';\nimport { MachinesProvider } from '../providers/machines/machines';\n\n@NgModule({\n    declarations: [\n        MyApp    \n    ],\n    imports: [\n        BrowserModule,\n        IonicModule.forRoot(MyApp),\n        HttpClientModule,\n        CookieModule.forRoot(),        \n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp    \n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        {provide: ErrorHandler, useClass: IonicErrorHandler},\n        PssApiProvider,\n    AuthProvider,\n    ProblemTypeProvider,\n    HttpLoadingProvider,\n    MachinesProvider\n    ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class User {\n    userName: string = null;\n    loggedIn: boolean = false;\n    userId: number = null;\n    \n    constructor() {\n        console.log('Hello AuthProvider Provider');\n    }        \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { PssApiProvider } from '../providers/pss-api/pss-api';\nimport { AuthProvider } from '../providers/auth/auth';\nimport { MachinesProvider } from '../providers/machines/machines';\nimport { ProblemTypeProvider } from '../providers/problem-type/problem-type'\nimport { HttpResponse } from '@angular/common/http';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {  \n\n    constructor(platform: Platform,\n                statusBar: StatusBar,\n                splashScreen: SplashScreen,\n                public pssApi: PssApiProvider,\n                public auth: AuthProvider,\n                public problemType: ProblemTypeProvider ,\n                public machinesInfo: MachinesProvider) {\n        this.auth.loadLoginInfoFromCookies();\n        this.pssApi.getProblemTypes().subscribe((result: HttpResponse<any>)=>{\n            if(result == null){\n                return;\n            }            \n            problemType.setProblemTypes(result.body.data);\n        })\n        this.pssApi.getUsers().subscribe((result: HttpResponse<any>)=>{\n            if(result == null){\n                return;\n            }\n            console.log(result.body.data);\n            this.auth.saveUsersList(result.body.data);    \n        })\n        this.pssApi.getMachines().subscribe((result: HttpResponse<any>)=>{\n            if(result==null){                \n                return;\n            }                        \n            this.machinesInfo.saveMachinesList(result.body.data)\n        })\n        this.pssApi.getMachineLocations().subscribe((result: HttpResponse<any>)=>{\n            if(result==null){                \n                return;\n            }                        \n            this.machinesInfo.saveMachineLocations(result.body.data)\n        })\n        \n        \n        platform.ready().then(() => {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            statusBar.styleDefault();\n            splashScreen.hide();\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient, HttpEvent, HttpEventType, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoadingController } from 'ionic-angular';\nimport { Observable} from 'rxjs/Observable';\nimport { Subject} from 'rxjs/Subject';\nimport { catchError, timeout, map, tap, last } from 'rxjs/operators';\nimport { of }         from 'rxjs/observable/of';\nimport { HttpLoadingProvider } from '../http-loading/http-loading'\n\n/*\n  Generated class for the PssApiProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class PssApiProvider {\n    pssHostUrl:string='http://0.0.0.0:8000';        \n    loading_instance = null;   \n    timeoutInMs:number=10000;\n    backendVersion=3;\n    \n    constructor(public http: HttpClient,\n                public loadingCtrl: LoadingController,\n                public httpLoading: HttpLoadingProvider) {\n        console.log('Hello PssApiProvider Provider');\n    }\n    getApiUrl(){\n        return this.pssHostUrl+'/api';\n    }\n    getBackendHost(){\n        return this.pssHostUrl;\n    }\n\n    makeHot(cold) {\n        const subject = new Subject();\n        cold.subscribe(subject);\n        return new Observable((observer) => subject.subscribe(observer));\n    }\n    \n    generate_api_call(apiName,url,method,hideLoading?){\n        return (...restOfArgs: any[]) => {\n            \n            let localUrl=url;            \n            let postObject=null;            \n            if(method==\"post\" || method==\"put\" || method==\"delete\") {\n                postObject=restOfArgs.shift();\n            }\n            let localMatches = localUrl.match(/\\:arg/g);\n            if (restOfArgs!=null && localMatches!=null && localMatches.length!=restOfArgs.length){\n                throw new Error(\"Oops - number of args in url and args given do not match\");\n            }\n            if(hideLoading==null){\n                //this.loading_instance = this.loadingCtrl.create({\n                //    content: 'Please wait...'                \n                //});\n                //this.loading_instance.present();\n                this.httpLoading.openLoadingDialog(apiName);\n            }\n            \n            while (localUrl.indexOf(':arg')>=0) {\n                let newUrl=localUrl.replace(\":arg\",restOfArgs.shift())\n                localUrl = newUrl;\n            }\n            let requestArgs = { reportProgress: true, withCredentials:true, body:postObject };\n            localUrl=localUrl+'?event_id=1';\n\n            const req = new HttpRequest(method, localUrl, requestArgs);            \n\n            let request =  this.http.request(req).pipe(\n                map(event  => this.getEventMessage(event as HttpEvent<any>)),\n                tap(message => console.log('PROGRESS IS '+message)),\n                last(),\n                timeout(10000),\n                catchError(this.handleError(apiName,null))                    \n            )\n            \n            // let request =  this.http.request(method,localUrl,requestArgs).pipe(\n            //     //map(event  => this.getEventMessage(event as HttpEvent<any>)),\n            //     // tap(message => console.log('PROGRESS IS '+message)),\n            //     last(),\n            //     timeout(10000),\n            //     catchError(this.handleError(apiName,null))                    \n            // )\n            let result_observable = this.makeHot(request)\n\n            //result_observable.subscribe(()=>{if(hideLoading==null){this.loading_instance.dismiss()}});\n            result_observable.subscribe(()=>{if(hideLoading==null){this.httpLoading.closeLoadingDialog()}});\n            return result_observable;            \n        }\n    }\n    \n    //completeTicketPurchase = this.generate_api_call('completeTicketPurchase',this.getApiUrl()+\"/:arg/prereg-token/:arg\",'put');\n    getMachines = this.generate_api_call('Getting Machines',this.getApiUrl()+\"/machines\",'get');\n    getUsers = this.generate_api_call('Gettin Users',this.getApiUrl()+\"/users\",'get');\n    getMachine = this.generate_api_call('Getting Machine',this.getApiUrl()+\"/machine/:arg\",'get');\n    getProblemTypes = this.generate_api_call('Getting Problem Types',this.getApiUrl()+\"/problem_types\",'get');\n    getMachineLocations = this.generate_api_call('Getting Machine Locations',this.getApiUrl()+\"/machine_locations\",'get');\n    addProblem = this.generate_api_call('Saving Problem',this.getApiUrl()+\"/problem\",'post');\n    editProblem = this.generate_api_call('Saving Problem',this.getApiUrl()+\"/problem\",'put');\n    editMachine = this.generate_api_call('Saving machine',this.getApiUrl()+\"/machine\",'put');\n    selectBackupMachine = this.generate_api_call('Getting backup machine',this.getApiUrl()+\"/backup_machine\",'put');\n    private getEventMessage(event: HttpEvent<any>) {        \n        switch (event.type) {\n        case HttpEventType.Sent:            \n            return `Http Request Sending`;\n            \n        case HttpEventType.DownloadProgress:\n            // Compute and show the % done:\n            const percentDone = Math.round(100 * event.loaded / event.total);\n            this.httpLoading.updateLoadingDialogMessage(null,percentDone+'% loaded...')\n            return `Http Request is ${percentDone}% uploaded.`\n            \n        case HttpEventType.Response:\n            return event\n            \n        default:\n            return `surprising upload event: ${event.type}.`\n        }\n    }\n    \n    private handleError<T> (operation = 'operation', result?: T) {                    \n        return (error: any): Observable<T> => {                        \n            if(error.constructor.name==\"TimeoutError\"){\n                console.log('TIMEOUT IS HAPPENING...');\n                //console.log(error)\n                error.status=-1;\n                error.error={message:\"Operation Timed Out.  Please Try Again. \"}\n            }\n            console.error(error); // log to console instead                \n            if(error.status!=404){                    \n                let error_message = \"\";\n                if(error.status==0){\n                    error_message=\"Internal server error.  Please try again.\"\n                } else {\n                    error_message=error.error.message;\n                }\n                //this.httpLoading.closeLoadingDialog();\n                alert(\"error message is ... \" + error_message);\n                //this.pssToast.showToast(error_message,7000,\"dangerToast\");                    \n            }\n            if (error.status==404){\n                console.log('found 404...')\n                result = {data:null} as any\n            }               \n            return of(result as T);\n        };        \n    }            \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/pss-api/pss-api.ts"],"sourceRoot":""}